//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medicine.Clinic.Client.Model.SpecimenService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEntity", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.SpecimenService.DtoTube))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen))]
    public partial class DtoEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoTube", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoTube : Medicine.Clinic.Client.Model.SpecimenService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSpecimen", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoSpecimen : Medicine.Clinic.Client.Model.SpecimenService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.SpecimenService.DtoTube DefaultTubeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.SpecimenService.DtoTube DefaultTube {
            get {
                return this.DefaultTubeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTubeField, value) != true)) {
                    this.DefaultTubeField = value;
                    this.RaisePropertyChanged("DefaultTube");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpecimenService.ISpecimenService")]
    public interface ISpecimenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/FindSpecimens", ReplyAction="http://tempuri.org/ISpecimenService/FindSpecimensResponse")]
        Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen[] FindSpecimens(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/FindSpecimens", ReplyAction="http://tempuri.org/ISpecimenService/FindSpecimensResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen[]> FindSpecimensAsync(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/EditSpecimen", ReplyAction="http://tempuri.org/ISpecimenService/EditSpecimenResponse")]
        string EditSpecimen(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/EditSpecimen", ReplyAction="http://tempuri.org/ISpecimenService/EditSpecimenResponse")]
        System.Threading.Tasks.Task<string> EditSpecimenAsync(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/GetSpecimenByCode", ReplyAction="http://tempuri.org/ISpecimenService/GetSpecimenByCodeResponse")]
        Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen GetSpecimenByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecimenService/GetSpecimenByCode", ReplyAction="http://tempuri.org/ISpecimenService/GetSpecimenByCodeResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen> GetSpecimenByCodeAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpecimenServiceChannel : Medicine.Clinic.Client.Model.SpecimenService.ISpecimenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpecimenServiceClient : System.ServiceModel.ClientBase<Medicine.Clinic.Client.Model.SpecimenService.ISpecimenService>, Medicine.Clinic.Client.Model.SpecimenService.ISpecimenService {
        
        public SpecimenServiceClient() {
        }
        
        public SpecimenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpecimenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecimenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecimenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen[] FindSpecimens(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen) {
            return base.Channel.FindSpecimens(dtoSpecimen);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen[]> FindSpecimensAsync(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen) {
            return base.Channel.FindSpecimensAsync(dtoSpecimen);
        }
        
        public string EditSpecimen(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen) {
            return base.Channel.EditSpecimen(dtoSpecimen);
        }
        
        public System.Threading.Tasks.Task<string> EditSpecimenAsync(Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen dtoSpecimen) {
            return base.Channel.EditSpecimenAsync(dtoSpecimen);
        }
        
        public Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen GetSpecimenByCode(string code) {
            return base.Channel.GetSpecimenByCode(code);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.SpecimenService.DtoSpecimen> GetSpecimenByCodeAsync(string code) {
            return base.Channel.GetSpecimenByCodeAsync(code);
        }
    }
}
