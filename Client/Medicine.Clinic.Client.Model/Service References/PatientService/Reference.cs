//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medicine.Clinic.Client.Model.PatientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEntity", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.PatientService.DtoSex))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.PatientService.DtoPatient))]
    public partial class DtoEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSex", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoSex : Medicine.Clinic.Client.Model.PatientService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPatient", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoPatient : Medicine.Clinic.Client.Model.PatientService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.PatientService.DtoSex SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dod {
            get {
                return this.DodField;
            }
            set {
                if ((this.DodField.Equals(value) != true)) {
                    this.DodField = value;
                    this.RaisePropertyChanged("Dod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.PatientService.DtoSex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PatientService.IPatientService")]
    public interface IPatientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/AddPatient", ReplyAction="http://tempuri.org/IPatientService/AddPatientResponse")]
        string AddPatient(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/AddPatient", ReplyAction="http://tempuri.org/IPatientService/AddPatientResponse")]
        System.Threading.Tasks.Task<string> AddPatientAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/EditPatient", ReplyAction="http://tempuri.org/IPatientService/EditPatientResponse")]
        string EditPatient(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/EditPatient", ReplyAction="http://tempuri.org/IPatientService/EditPatientResponse")]
        System.Threading.Tasks.Task<string> EditPatientAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/FindPatients", ReplyAction="http://tempuri.org/IPatientService/FindPatientsResponse")]
        Medicine.Clinic.Client.Model.PatientService.DtoPatient[] FindPatients(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/FindPatients", ReplyAction="http://tempuri.org/IPatientService/FindPatientsResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.PatientService.DtoPatient[]> FindPatientsAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientMrn", ReplyAction="http://tempuri.org/IPatientService/GetPatientMrnResponse")]
        string GetPatientMrn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientMrn", ReplyAction="http://tempuri.org/IPatientService/GetPatientMrnResponse")]
        System.Threading.Tasks.Task<string> GetPatientMrnAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientDodByOrder", ReplyAction="http://tempuri.org/IPatientService/GetPatientDodByOrderResponse")]
        System.Nullable<System.DateTime> GetPatientDodByOrder(string orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientDodByOrder", ReplyAction="http://tempuri.org/IPatientService/GetPatientDodByOrderResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetPatientDodByOrderAsync(string orderNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientServiceChannel : Medicine.Clinic.Client.Model.PatientService.IPatientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientServiceClient : System.ServiceModel.ClientBase<Medicine.Clinic.Client.Model.PatientService.IPatientService>, Medicine.Clinic.Client.Model.PatientService.IPatientService {
        
        public PatientServiceClient() {
        }
        
        public PatientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddPatient(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.AddPatient(dtoPatient);
        }
        
        public System.Threading.Tasks.Task<string> AddPatientAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.AddPatientAsync(dtoPatient);
        }
        
        public string EditPatient(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.EditPatient(dtoPatient);
        }
        
        public System.Threading.Tasks.Task<string> EditPatientAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.EditPatientAsync(dtoPatient);
        }
        
        public Medicine.Clinic.Client.Model.PatientService.DtoPatient[] FindPatients(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.FindPatients(dtoPatient);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.PatientService.DtoPatient[]> FindPatientsAsync(Medicine.Clinic.Client.Model.PatientService.DtoPatient dtoPatient) {
            return base.Channel.FindPatientsAsync(dtoPatient);
        }
        
        public string GetPatientMrn() {
            return base.Channel.GetPatientMrn();
        }
        
        public System.Threading.Tasks.Task<string> GetPatientMrnAsync() {
            return base.Channel.GetPatientMrnAsync();
        }
        
        public System.Nullable<System.DateTime> GetPatientDodByOrder(string orderNumber) {
            return base.Channel.GetPatientDodByOrder(orderNumber);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetPatientDodByOrderAsync(string orderNumber) {
            return base.Channel.GetPatientDodByOrderAsync(orderNumber);
        }
    }
}
