//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medicine.Clinic.Client.Model.InterpretationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoConcreteDiagnosis", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoConcreteDiagnosis : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoDiagnosis DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoOrder OrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoDiagnosis Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoOrder Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEntity", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoDiagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoVisit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoApartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoClinic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoDoctor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoPatient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoSex))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis))]
    public partial class DtoEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDiagnosis", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoDiagnosis : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoOrder", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoOrder : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoVisit VisitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicalInfo {
            get {
                return this.ClinicalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalInfoField, value) != true)) {
                    this.ClinicalInfoField = value;
                    this.RaisePropertyChanged("ClinicalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoVisit Visit {
            get {
                return this.VisitField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitField, value) != true)) {
                    this.VisitField = value;
                    this.RaisePropertyChanged("Visit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoVisit", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoVisit : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoApartment ApartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoDoctor DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoPatient PatientField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoApartment Apartment {
            get {
                return this.ApartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ApartmentField, value) != true)) {
                    this.ApartmentField = value;
                    this.RaisePropertyChanged("Apartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNumber {
            get {
                return this.BillingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNumberField, value) != true)) {
                    this.BillingNumberField = value;
                    this.RaisePropertyChanged("BillingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoDoctor Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoPatient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApartment", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoApartment : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoClinic ClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoClinic Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoClinic", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoClinic : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoDoctor", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoDoctor : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoClinic ClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoClinic Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoPatient", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoPatient : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoSex SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dod {
            get {
                return this.DodField;
            }
            set {
                if ((this.DodField.Equals(value) != true)) {
                    this.DodField = value;
                    this.RaisePropertyChanged("Dod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoSex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoSex", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoSex : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoInterpretation", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoInterpretation : Medicine.Clinic.Client.Model.InterpretationService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char ConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.InterpretationService.DtoOrder OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SignOutDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((this.ConditionField.Equals(value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.InterpretationService.DtoOrder Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignOutDt {
            get {
                return this.SignOutDtField;
            }
            set {
                if ((this.SignOutDtField.Equals(value) != true)) {
                    this.SignOutDtField = value;
                    this.RaisePropertyChanged("SignOutDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InterpretationService.IInterpretationService")]
    public interface IInterpretationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/FindConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/FindConcreteDiagnosisResponse")]
        Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis[] FindConcreteDiagnosis(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/FindConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/FindConcreteDiagnosisResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis[]> FindConcreteDiagnosisAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/GetInterpretationByOrder", ReplyAction="http://tempuri.org/IInterpretationService/GetInterpretationByOrderResponse")]
        Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation GetInterpretationByOrder(string orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/GetInterpretationByOrder", ReplyAction="http://tempuri.org/IInterpretationService/GetInterpretationByOrderResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation> GetInterpretationByOrderAsync(string orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/AddConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/AddConcreteDiagnosisResponse")]
        string AddConcreteDiagnosis(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/AddConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/AddConcreteDiagnosisResponse")]
        System.Threading.Tasks.Task<string> AddConcreteDiagnosisAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/EditConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/EditConcreteDiagnosisResponse")]
        string EditConcreteDiagnosis(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/EditConcreteDiagnosis", ReplyAction="http://tempuri.org/IInterpretationService/EditConcreteDiagnosisResponse")]
        System.Threading.Tasks.Task<string> EditConcreteDiagnosisAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/EditInterpretation", ReplyAction="http://tempuri.org/IInterpretationService/EditInterpretationResponse")]
        string EditInterpretation(Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation dtoInterpretation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterpretationService/EditInterpretation", ReplyAction="http://tempuri.org/IInterpretationService/EditInterpretationResponse")]
        System.Threading.Tasks.Task<string> EditInterpretationAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation dtoInterpretation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInterpretationServiceChannel : Medicine.Clinic.Client.Model.InterpretationService.IInterpretationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterpretationServiceClient : System.ServiceModel.ClientBase<Medicine.Clinic.Client.Model.InterpretationService.IInterpretationService>, Medicine.Clinic.Client.Model.InterpretationService.IInterpretationService {
        
        public InterpretationServiceClient() {
        }
        
        public InterpretationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InterpretationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterpretationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterpretationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis[] FindConcreteDiagnosis(string number) {
            return base.Channel.FindConcreteDiagnosis(number);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis[]> FindConcreteDiagnosisAsync(string number) {
            return base.Channel.FindConcreteDiagnosisAsync(number);
        }
        
        public Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation GetInterpretationByOrder(string orderNumber) {
            return base.Channel.GetInterpretationByOrder(orderNumber);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation> GetInterpretationByOrderAsync(string orderNumber) {
            return base.Channel.GetInterpretationByOrderAsync(orderNumber);
        }
        
        public string AddConcreteDiagnosis(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis) {
            return base.Channel.AddConcreteDiagnosis(dtoConcreteDiagnosis);
        }
        
        public System.Threading.Tasks.Task<string> AddConcreteDiagnosisAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis) {
            return base.Channel.AddConcreteDiagnosisAsync(dtoConcreteDiagnosis);
        }
        
        public string EditConcreteDiagnosis(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis) {
            return base.Channel.EditConcreteDiagnosis(dtoConcreteDiagnosis);
        }
        
        public System.Threading.Tasks.Task<string> EditConcreteDiagnosisAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoConcreteDiagnosis dtoConcreteDiagnosis) {
            return base.Channel.EditConcreteDiagnosisAsync(dtoConcreteDiagnosis);
        }
        
        public string EditInterpretation(Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation dtoInterpretation) {
            return base.Channel.EditInterpretation(dtoInterpretation);
        }
        
        public System.Threading.Tasks.Task<string> EditInterpretationAsync(Medicine.Clinic.Client.Model.InterpretationService.DtoInterpretation dtoInterpretation) {
            return base.Channel.EditInterpretationAsync(dtoInterpretation);
        }
    }
}
