//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Medicine.Clinic.Client.Model.ApartmentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoEntity", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.ApartmentService.DtoClinic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment))]
    public partial class DtoEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoClinic", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoClinic : Medicine.Clinic.Client.Model.ApartmentService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoApartment", Namespace="http://schemas.datacontract.org/2004/07/Medicine.Clinic.Service")]
    [System.SerializableAttribute()]
    public partial class DtoApartment : Medicine.Clinic.Client.Model.ApartmentService.DtoEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Medicine.Clinic.Client.Model.ApartmentService.DtoClinic ClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medicine.Clinic.Client.Model.ApartmentService.DtoClinic Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEdit {
            get {
                return this.IsEditField;
            }
            set {
                if ((this.IsEditField.Equals(value) != true)) {
                    this.IsEditField = value;
                    this.RaisePropertyChanged("IsEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApartmentService.IApartmentService")]
    public interface IApartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApartmentService/FindApartments", ReplyAction="http://tempuri.org/IApartmentService/FindApartmentsResponse")]
        Medicine.Clinic.Client.Model.ApartmentService.DtoApartment[] FindApartments(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApartmentService/FindApartments", ReplyAction="http://tempuri.org/IApartmentService/FindApartmentsResponse")]
        System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.ApartmentService.DtoApartment[]> FindApartmentsAsync(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApartmentService/AddApartment", ReplyAction="http://tempuri.org/IApartmentService/AddApartmentResponse")]
        string AddApartment(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApartmentService/AddApartment", ReplyAction="http://tempuri.org/IApartmentService/AddApartmentResponse")]
        System.Threading.Tasks.Task<string> AddApartmentAsync(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApartmentServiceChannel : Medicine.Clinic.Client.Model.ApartmentService.IApartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApartmentServiceClient : System.ServiceModel.ClientBase<Medicine.Clinic.Client.Model.ApartmentService.IApartmentService>, Medicine.Clinic.Client.Model.ApartmentService.IApartmentService {
        
        public ApartmentServiceClient() {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Medicine.Clinic.Client.Model.ApartmentService.DtoApartment[] FindApartments(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment) {
            return base.Channel.FindApartments(dtoApartment);
        }
        
        public System.Threading.Tasks.Task<Medicine.Clinic.Client.Model.ApartmentService.DtoApartment[]> FindApartmentsAsync(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment) {
            return base.Channel.FindApartmentsAsync(dtoApartment);
        }
        
        public string AddApartment(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment) {
            return base.Channel.AddApartment(dtoApartment);
        }
        
        public System.Threading.Tasks.Task<string> AddApartmentAsync(Medicine.Clinic.Client.Model.ApartmentService.DtoApartment dtoApartment) {
            return base.Channel.AddApartmentAsync(dtoApartment);
        }
    }
}
